<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Recipe Finder</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <header>
        <h1>üç≥ Interactive Recipe Finder</h1>
    </header>
    <main>
        <section class="input-section">
            <input type="text" id="ingredients" placeholder="Enter ingredients (comma separated)">
            <button id="searchBtn">Search Recipes</button>
        </section>
        <section id="recipes" class="recipes-section">
            <!-- Recipes will be displayed here -->
        </section>
    </main>
    <script src="script.js"></script>
</body>
</html>
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background: #fef9f4;
}

header {
    background-color: #ff6f61;
    color: white;
    text-align: center;
    padding: 20px 0;
}

.input-section {
    display: flex;
    justify-content: center;
    margin: 20px 0;
}

input {
    width: 300px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px 0 0 5px;
    outline: none;
}

button {
    padding: 10px 15px;
    border: none;
    background-color: #ff6f61;
    color: white;
    cursor: pointer;
    border-radius: 0 5px 5px 0;
}

button:hover {
    background-color: #e65b50;
}

.recipes-section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    padding: 20px;
}

.recipe-card {
    background: white;
    border-radius: 10px;
    padding: 15px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    text-align: center;
}

.recipe-card img {
    width: 100%;
    border-radius: 10px;
}

.recipe-card h3 {
    margin: 10px 0;
}

.recipe-card a {
    display: inline-block;
    margin-top: 10px;
    padding: 8px 12px;
    background-color: #ff6f61;
    color: white;
    border-radius: 5px;
    text-decoration: none;
}

.recipe-card a:hover {
    background-color: #e65b50;
}
const searchBtn = document.getElementById("searchBtn");
const recipesSection = document.getElementById("recipes");

// Replace with your Spoonacular API key
const API_KEY = "273eff32b3c948f4bfc70b10d05e87ca";

searchBtn.addEventListener("click", () => {
    const ingredients = document.getElementById("ingredients").value.trim();
    if (!ingredients) {
        alert("Please enter at least one ingredient.");
        return;
    }
    fetchRecipes(ingredients);
});

async function fetchRecipes(ingredients) {
    recipesSection.innerHTML = "<p>Loading recipes...</p>";
    try {
        const response = await fetch(`https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredients}&number=12&apiKey=${API_KEY}`);
        const data = await response.json();
        displayRecipes(data);
    } catch (error) {
        recipesSection.innerHTML = "<p>Failed to fetch recipes. Try again later.</p>";
        console.error(error);
    }
}

function displayRecipes(recipes) {
    recipesSection.innerHTML = "";
    if (recipes.length === 0) {
        recipesSection.innerHTML = "<p>No recipes found for these ingredients.</p>";
        return;
    }

    recipes.forEach(recipe => {
        const recipeCard = document.createElement("div");
        recipeCard.classList.add("recipe-card");
        recipeCard.innerHTML = `
            <img src="${recipe.image}" alt="${recipe.title}">
            <h3>${recipe.title}</h3>
            <p>Used Ingredients: ${recipe.usedIngredientCount}</p>
            <p>Missing Ingredients: ${recipe.missedIngredientCount}</p>
            <a href="https://spoonacular.com/recipes/${recipe.title.replace(/ /g, "-")}-${recipe.id}" target="_blank">View Recipe</a>
        `;
        recipesSection.appendChild(recipeCard);
    });
}
